from web3 import Web3

# Hubungkan ke jaringan blockchain
blockchain_url = "https://mainnet.infura.io/v3/YOUR_INFURA_PROJECT_ID"
web3 = Web3(Web3.HTTPProvider(blockchain_url))

# ABI dan alamat contract dari Bric Stablecoin
contract_abi = [
    # Hanya menyertakan fungsi transfer dari ABI Solidity
    {
        "constant": False,
        "inputs": [{"name": "to", "type": "address"}, {"name": "amount", "type": "uint256"}],
        "name": "transfer",
        "outputs": [{"name": "", "type": "bool"}],
        "type": "function"
    }
]
contract_address = "0xYourSmartContractAddressHere"

# Buat instance contract
contract = web3.eth.contract(address=contract_address, abi=contract_abi)

# Fungsi untuk melakukan pembayaran lintas negara
def transfer_bric(sender_private_key, to_address, amount):
    sender_address = web3.eth.account.privateKeyToAccount(sender_private_key).address

    # Bangun transaksi
    transaction = contract.functions.transfer(to_address, web3.toWei(amount, 'ether')).buildTransaction({
        'chainId': 1,  # Mainnet
        'gas': 2000000,
        'gasPrice': web3.toWei('50', 'gwei'),
        'nonce': web3.eth.getTransactionCount(sender_address),
    })

    # Tanda tangani transaksi
    signed_txn = web3.eth.account.signTransaction(transaction, private_key=sender_private_key)

    # Kirim transaksi
    tx_hash = web3.eth.sendRawTransaction(signed_txn.rawTransaction)

    print(f"Transaction successful with hash: {tx_hash.hex()}")
    return tx_hash.hex()

# Contoh penggunaan fungsi
sender_private_key = "0xYourPrivateKeyHere"
to_address = "0xReceiverAddressHere"
amount = 10  # 10 BRIC

transfer_bric(sender_private_key, to_address, amount)
